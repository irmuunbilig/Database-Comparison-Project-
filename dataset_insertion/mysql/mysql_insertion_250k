import csv
import mysql.connector
import time

# Database configuration
db_config = {
    'user': 'root',
    'password': '',
    'host': 'localhost',
    'database': 'curriculum'
}

# Paths to the dataset files
dataset_files = {
    'professors': '/Users/irmuunbilig/Desktop/DB_pro/Dataset/250k/professors_250k.csv',
    'courses': '/Users/irmuunbilig/Desktop/DB_pro/Dataset/250k/courses_250k.csv',
    'schedules': '/Users/irmuunbilig/Desktop/DB_pro/Dataset/250k/schedules_250k.csv',
}

# Corresponding table names in the database
table_names = {
    'professors': 'professors',
    'courses': 'courses',
    'schedules': 'schedules'
}

def import_csv_to_db(file_path, table_name):
    # Connect to the MySQL database
    connection = mysql.connector.connect(**db_config)
    cursor = connection.cursor()

    # Disable foreign key checks
    cursor.execute("SET foreign_key_checks = 0")

    with open(file_path, 'r') as csvfile:
        reader = csv.DictReader(csvfile)
        batch_size = 1000
        start_time = time.time()
        rows = []

        for i, row in enumerate(reader, 1):
            rows.append(tuple(row.values()))
            if i % batch_size == 0:
                # Construct the insert query
                insert_query = f"INSERT INTO {table_name} ({', '.join(row.keys())}) VALUES ({', '.join(['%s']*len(row))})"
                try:
                    cursor.executemany(insert_query, rows)
                    connection.commit()
                    print(f"Inserted {i} rows into {table_name}")
                except mysql.connector.Error as err:
                    print(f"Error: {err}")
                    connection.rollback()
                rows = []

        # Insert any remaining rows
        if rows:
            insert_query = f"INSERT INTO {table_name} ({', '.join(row.keys())}) VALUES ({', '.join(['%s']*len(row))})"
            try:
                cursor.executemany(insert_query, rows)
                connection.commit()
                print(f"Inserted {i} rows into {table_name}")
            except mysql.connector.Error as err:
                print(f"Error: {err}")
                connection.rollback()

    # Enable foreign key checks
    cursor.execute("SET foreign_key_checks = 1")

    cursor.close()
    connection.close()

    execution_time = time.time() - start_time
    print(f"Imported {table_name} dataset in {execution_time:.2f} seconds")

# Import each dataset
for dataset, file_path in dataset_files.items():
    print(f"Importing {dataset} dataset...")
    import_csv_to_db(file_path, table_names[dataset])
